version: '3'

services:
  wireguard:
      image: linuxserver/wireguard
      container_name: wireguard
      cap_add:
        - NET_ADMIN
        - SYS_MODULE
      environment:
        - PUID=1000
        - PGID=1000
        - TZ=America/Chicago
        - SERVERURL=wireguard.example.com #optional
        - SERVERPORT=51820 #optional
        - PEERS=1 #optional
        - PEERDNS=auto #optional
        - INTERNAL_SUBNET=10.13.13.0 #optional
      volumes:
        - ${FOLDER_FOR_DOCKER_DATA}/wireguard:/config
        - /lib/modules:/lib/modules
      ports:
        - 51820:51820/udp
      sysctls:
        - net.ipv4.conf.all.src_valid_mark=1
      restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbit
    network_mode: "service:wireguard"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/qbittorrent:/config
      - ${FOLDER_FOR_MEDIA}/data/torrents:/data
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.${DOMAIN}`)"
      - "traefik.http.routers.qbittorrent.entrypoints=http"
      - "traefik.http.routers.qbittorrent.tls.certresolver=cloudflare"
      
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    ports:
      - 8989:8989
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/sonarr:/config
      - ${FOLDER_FOR_MEDIA}:/data
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr.entrypoints=http"
      - "traefik.http.routers.sonarr.tls.certresolver=cloudflare"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    networks:
      - proxy

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    ports:
      - 7878:7878
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/radarr:/config
      - ${FOLDER_FOR_MEDIA}:/data
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr.entrypoints=http"
      - "traefik.http.routers.radarr.tls.certresolver=cloudflare"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    networks:
      - proxy

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    ports:
      - 8686:8686
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/lidarr:/config
      - ${FOLDER_FOR_MEDIA}:/data
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)"
      - "traefik.http.routers.lidarr.entrypoints=http"
      - "traefik.http.routers.lidarr.tls.certresolver=cloudflare"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8686"
    networks:
      - proxy 


  overseerr:
    image: linuxserver/overseerr
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/overseerr:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.rule=Host(`overseerr.${DOMAIN}`)"
      - "traefik.http.routers.overseerr.entrypoints=http"
      - "traefik.http.routers.overseerr.tls.certresolver=cloudflare"
    networks:
      - proxy

  prowlarr:
      image: linuxserver/prowlarr:develop
      container_name: prowlarr
      environment:
        - PUID=1000
        - PGID=1000
        - TZ=America/Chicago
      volumes:
        - ${FOLDER_FOR_DOCKER_DATA}/prowlarr:/config
      restart: unless-stopped
      network_mode: "service:wireguard"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)"
        - "traefik.http.routers.prowlarr.entrypoints=http"
        - "traefik.http.routers.prowlarr.tls.certresolver=cloudflare"
        - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
# ... (other services with similar label updates)

networks:
  proxy:
    external: true