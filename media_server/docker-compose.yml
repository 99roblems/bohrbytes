version: '3'

services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    ports:
      - "8888:8888/tcp"                         # Gluetun Local Network HTTP proxy
      - "8388:8388/tcp"                         # Gluetun Local Network Shadowsocks
      - "8388:8388/udp"                         # Gluetun Local Network Shadowsocks
      - "${WEBUI_PORT_QBITTORRENT:?err}:${WEBUI_PORT_QBITTORRENT:?err}"   # WebUI Portal: qBittorrent
      - "${QBIT_PORT:?err}:6881"                # Transmission Torrent Port

    volumes:
      - ${FOLDER_FOR_DOCKER_DATA:?err}/gluetun:/gluetun
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      #- SERVER_COUNTRIES=Sweden, Netherlands
      - SERVER_CITIES=${SERVER_CITIES}
      - HTTPPROXY=on
      - SHADOWSOCKS=on
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbit.${DOMAIN}`)"
      - "traefik.http.routers.qbittorrent.entrypoints=http"
      - "traefik.http.routers.qbittorrent.middlewares=https-redirectscheme@file"
      - "traefik.http.routers.qbittorrent-secure.rule=Host(`qbit.${DOMAIN}`)"
      - "traefik.http.routers.qbittorrent-secure.tls=true"
      - "traefik.http.routers.qbittorrent-secure.service=qbittorrent"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8200"
    networks:
      - proxy

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbit
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=${WEBUI_PORT_QBITTORRENT:?err}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:qbittorrent
      - TP_THEME=${TP_THEME:?err}
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/qbittorrent:/config
      - ${FOLDER_FOR_MEDIA}/torrents:/data/torrents
    depends_on:
      - gluetun
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:sonarr
      - TP_THEME=${TP_THEME:?err}
    ports:
      - "${WEBUI_PORT_SONARR:?err}:8989"
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/sonarr:/config
      - ${FOLDER_FOR_MEDIA}:/data
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr.entrypoints=http"
      - "traefik.http.routers.sonarr.middlewares=https-redirectscheme@file"
      - "traefik.http.routers.sonarr-secure.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr-secure.tls=true"
      - "traefik.http.routers.sonarr-secure.service=sonarr"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    networks:
      - proxy

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:radarr
      - TP_THEME=${TP_THEME:?err}
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/radarr:/config
      - ${FOLDER_FOR_MEDIA}:/data
    ports:
      - "${WEBUI_PORT_RADARR:?err}:7878"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr.entrypoints=http"
      - "traefik.http.routers.radarr.middlewares=https-redirectscheme@file"
      - "traefik.http.routers.radarr-secure.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr-secure.tls=true"
      - "traefik.http.routers.radarr-secure.service=radarr"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    networks:
      - proxy

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:lidarr
      - TP_THEME=${TP_THEME:?err}
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/lidarr:/config
      - ${FOLDER_FOR_MEDIA}:/data
    ports:
      - "${WEBUI_PORT_LIDARR:?err}:8686"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)"
      - "traefik.http.routers.lidarr.entrypoints=http"
      - "traefik.http.routers.lidarr.middlewares=https-redirectscheme@file"
      - "traefik.http.routers.lidarr-secure.rule=Host(`lidarr.${DOMAIN}`)"
      - "traefik.http.routers.lidarr-secure.tls=true"
      - "traefik.http.routers.lidarr-secure.service=lidarr"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
    networks:
      - proxy 

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE}
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/sabnzbd:/config
      - ${FOLDER_FOR_MEDIA}/usenet:/data/usenet
    ports:
      - ${WEBUI_PORT_SABNZBD}:8080
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.${DOMAIN}`)"
      - "traefik.http.routers.sabnzbd.entrypoints=http"
      - "traefik.http.routers.sabnzbd.middlewares=https-redirectscheme@file"
      - "traefik.http.routers.sabnzbd-secure.rule=Host(`sabnzbd.${DOMAIN}`)"
      - "traefik.http.routers.sabnzbd-secure.tls=true"
      - "traefik.http.routers.sabnzbd-secure.service=nzbget"
      - "traefik.http.services.sabnzbd.loadbalancer.server.port=8100"
    networks:
      - proxy
  
  overseerr:
    image: linuxserver/overseerr
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/overseerr:/config
    ports:
      - "${WEBUI_PORT_OVERSEERR:?err}:5055"    
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.rule=Host(`overseerr.${DOMAIN}`)"
      - "traefik.http.routers.overseerr.entrypoints=http"
      - "traefik.http.routers.overseerr.middlewares=https-redirectscheme@file"
      - "traefik.http.routers.overseerr-secure.rule=Host(`overseerr.${DOMAIN}`)"
      - "traefik.http.routers.overseerr-secure.tls=true"
      - "traefik.http.routers.overseerr-secure.service=overseerr"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"
    networks:
      - proxy

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
# Add Configurations for GPU Hardware Rendering Here:
#    devices:
#      - /dev/dri/renderD128:/dev/dri/renderD128
#      - /dev/dri/card0:/dev/dri/card0
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA:?err}/plex:/config
      - ${FOLDER_FOR_MEDIA:?err}/media:/data/media
    ports:
      - "${WEBUI_PORT_PLEX:?err}:32400"
#      - 1900:1900/udp
#      - 5353:5353/udp
      - 8324:8324
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)"
      - "traefik.http.routers.plex.entrypoints=http"
      - "traefik.http.routers.plex.middlewares=https-redirectscheme@file"
      - "traefik.http.routers.plex-secure.rule=Host(`plex.${DOMAIN}`)"
      - "traefik.http.routers.plex-secure.tls=true"
      - "traefik.http.routers.plex-secure.service=plex"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
    networks:
      - proxy

  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:prowlarr
      - TP_THEME=${TP_THEME:?err}
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA}/prowlarr:/config
    ports:
      - "${WEBUI_PORT_PROWLARR:?err}:9696"      # Prowlarr WebUI
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)"
      - "traefik.http.routers.prowlarr.entrypoints=http"
      - "traefik.http.routers.prowlarr.middlewares=https-redirectscheme@file"
      - "traefik.http.routers.prowlarr-secure.rule=Host(`prowlarr.${DOMAIN}`)"
      - "traefik.http.routers.prowlarr-secure.tls=true"
      - "traefik.http.routers.prowlarr-secure.service=prowlarr"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    networks:
      - proxy

  readarr:
    image: linuxserver/readarr:develop
    container_name: readarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_DOCKER_DATA:?err}/readarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:readarr
      - TP_THEME=${TP_THEME:?err}
    ports:
      - "${WEBUI_PORT_READARR:?err}:8787"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.readarr.rule=Host(`readarr.${DOMAIN}`)"
      - "traefik.http.routers.readarr.entrypoints=http"
      - "traefik.http.routers.readarr.middlewares=https-redirectscheme@file"
      - "traefik.http.routers.readarr-secure.rule=Host(`readarr.${DOMAIN}`)"
      - "traefik.http.routers.readarr-secure.tls=true"
      - "traefik.http.routers.readarr-secure.service=readarr"
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"
    networks:
      - proxy

networks:
  proxy:
    external: true